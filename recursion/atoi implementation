class Solution {
    long atoi(String s, int sign, int i, long result) {
        if (sign * result >= Integer.MAX_VALUE) {
            return Integer.MAX_VALUE;
        }
        if (sign * result <= Integer.MIN_VALUE) {
            return Integer.MIN_VALUE;
        }
        if (i >= s.length() || s.charAt(i) < '0' || s.charAt(i) > '9') {
            return sign * result;
        }
        result = atoi(s, sign, i + 1, (result * 10 + (s.charAt(i) - '0')));
        return result;
    }

    public int myAtoi(String s) {
        int i = 0, n = s.length(), sign = 1;
        while (i < n && s.charAt(i) == ' ')
            ++i;
        
        if (i == n) {
            return 0; // If the entire string is made up of spaces, return 0.
        }

        if (s.charAt(i) == '-') {
            sign = -1;
            ++i;
        } else if (s.charAt(i) == '+') {
            ++i;
        }

        return (int) atoi(s, sign, i, 0);
    }
}
